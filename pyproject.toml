# pyproject.toml
# Python 專案配置

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "potato-bot"
version = "3.1.0"
description = "Discord 多功能管理機器人"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "Potato Bot Team", email = "support@potato-bot.com"}
]
keywords = ["discord", "bot", "ticket", "vote", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "discord.py>=2.5.2",
    "fastapi>=0.110.0",
    "aiomysql>=0.2.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "aioredis>=2.0.1",
    "openai>=1.12.0",
    "Pillow>=10.0.0",
    "yt-dlp>=2024.3.10",
    "textblob>=0.17.1",
    "httpx>=0.25.0",
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
    "PyNaCl>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.3.1",
    "black>=24.8.0",
    "isort>=5.13.2",
    "flake8>=7.1.1",
    "mypy>=1.11.2",
    "bandit>=1.7.9",
    "pydocstyle>=6.3.0",
    "pre-commit>=3.0.0",
    "coverage>=7.0.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-timeout>=2.3.1",
    "coverage>=7.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-mermaid2-plugin>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/Craig-0219/potato"
Documentation = "https://potato-bot.readthedocs.io"
Repository = "https://github.com/Craig-0219/potato"
"Bug Tracker" = "https://github.com/Craig-0219/potato/issues"

[tool.setuptools]
packages = ["bot", "shared"]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | archive
  | backups
  | node_modules
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["bot", "shared"]
known_third_party = ["discord", "fastapi", "pydantic", "aiomysql"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501", "F401"]
max-complexity = 12
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    "build",
    "dist",
    "archive",
    "backups",
    "node_modules"
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "discord.*",
    "aiomysql.*",
    "aioredis.*",
    "textblob.*",
    "yt_dlp.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=bot",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-fail-under=70"
]
markers = [
    "unit: 單元測試",
    "integration: 整合測試",
    "e2e: 端到端測試",
    "slow: 慢速測試",
    "api: API 相關測試",
    "database: 資料庫相關測試",
    "discord: Discord 相關測試",
    "security: 安全性測試",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["bot"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "archive/*",
    "backups/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.bandit]
exclude_dirs = ["tests", "archive", "backups"]
skips = ["B101", "B601"]

[tool.pydocstyle]
convention = "google"
add-ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D107"]
